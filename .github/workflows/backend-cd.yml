name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'

jobs:
  run-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/backend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: caches pipenv
      id: restore-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.local/share/virtualenvs
        key: pipenv-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pipenv-${{ hashFiles('Pipfile.lock') }}
          pipenv-
    
    - name: Install pipenv
      run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

    - name: Install dependencies
      run: pipenv install

    - name: Run test
      run: pipenv run test

  run-lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/backend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: caches pipenv
      id: restore-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.local/share/virtualenvs
        key: pipenv-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pipenv-${{ hashFiles('Pipfile.lock') }}
          pipenv-
    
    - name: Install pipenv
      run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

    - name: Install dependencies
      run: pipenv install --dev

    - name: Install flake
      run: pipenv install flake8

    - name: Run lint
      run: pipenv run lint
  
  build:
    needs: [run-test, run-lint]
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      working-directory: starter/backend
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA} .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA}

    - name: Configure kubectl
      run: |
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Set image tag
      working-directory: starter/backend/k8s
      run:
        kustomize edit set image backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA}
    - name:  apply to cluster    
      working-directory: starter/backend/k8s
      run:
        kustomize build | kubectl apply -f -


    
